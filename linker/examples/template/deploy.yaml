# yaml-language-server: $schema=http://json-schema.org/draft-07/schema

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: demoSiteDeploy
  title: Demo site Deployment
  description: Demo site Deployment
spec:
  owner: user:guest
  type: website
  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Selet a ENV
      required:
        - Entity
      properties:
        msg:
          title: Welcome Message
          type: string
          description: Welcome Message
          ui:autofocus: true
          ui:options:
            rows: 5
        Entity:
          title: environment
          type: string
          description: Entity of the component
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              kind: [Component]
              spec.type: [environment]

  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch
      name: fetch
      action: catalog:fetch
      input:
        entityRef	:  ${{ parameters.Entity }}
    - id: fetchK8S
      name: fetchK8S
      action: catalog:fetch
      input:
        entityRef	:  ${{ steps.fetch.output.entity.spec.k8s }} 
    - id: kubeconfig
      name: Get kubeconfig
      action: cli:run
      input:
        command: az aks get-credentials --resource-group rg-devops-dev-001 --name ${{ steps.fetchK8S.output.entity.metadata.name }} -f current.yaml
    - id: clone
      name: clone
      action: git:clone
      input:
        repoUrl: https://github.com/weitongxuan/backstagetest1
    - id: deploy
      name: deploy
      action: cli:run
      input:
        command: helm install ${{ steps.fetch.output.entity.metadata.name }} backstagetest1/helm/my-site --kubeconfig current.yaml -n ${{ steps.fetch.output.entity.spec.namespace }} --set msg="${{ parameters.msg }}" --set dns="${{ steps.fetch.output.entity.spec.dns }}"

    - id: createConfigFile
      name: createConfigFile
      action: roadiehq:utils:fs:write
      input:
        path: backstagetest1/values/deploy/${{ steps.fetch.output.entity.metadata.name }}.yaml
        content: |
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ steps.fetch.output.entity.metadata.name }}-deploy
            annotations:
              backstage.io/kubernetes-label-selector: 'app=nginx,provider=backstage'
              backstage.io/kubernetes-namespace: ${{ steps.fetch.output.entity.spec.namespace }}
            links:
            - url: http://${{ steps.fetch.output.entity.spec.dns }}
              title: ${{ steps.fetch.output.entity.spec.dns }}
              icon: dashboard
          spec:
            type: website
            owner: guests
            lifecycle: development
            msg: ${{ parameters.msg }}
            dependsOn:
              - ${{ parameters.Entity }}
    - id: add
      name: add
      action: git
      input:
        command: add
        args:
          - "."
        workingDirectory: "./backstagetest1"
    - id: commit
      name: commit
      action: git
      input:
        command: commit 
        args:
          - "-m"
          - "add deploy value ${{ steps.fetch.output.entity.metadata.name }}"
        workingDirectory: "./backstagetest1"
    - id: push
      name: push
      action: git
      input:
        command: push
        workingDirectory: "./backstagetest1"
    - id: register
      name: register
      action: catalog:register
      input:
        repoContentsUrl: https://github.com/weitongxuan/backstagetest1/blob/master/
        catalogInfoPath: values/deploy/${{ steps.fetch.output.entity.metadata.name }}.yaml

  # Outputs are displayed to the user after a successful execution of the template.

