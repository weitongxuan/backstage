apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: db1
  description: Stores 
spec:
  type: database
  owner: guests
  host: "192.168.0.11:3306"
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: db2
  description: Stores 
spec:
  type: database
  owner: guests
  host: "192.168.0.112:3306"
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
  annotations:
    backstage.io/kubernetes-id: value
    dev.azure.com/project: observ
    dev.azure.com/build-definition: "(Deploy) [Deployment] staging"
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website2
  annotations:
    backstage.io/kubernetes-id: value
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---